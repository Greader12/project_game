import React, { useEffect, useState } from 'react';
import axios from '../axios'; // —Ç–≤–æ–π axios
import './ProjectProgress.css'; // —Å—Ç–∏–ª–∏ –¥–ª—è –ø–∞–Ω–µ–ª–∏

const ProjectProgress = ({ projectId }) => {
  const [progress, setProgress] = useState(null);

  useEffect(() => {
    fetchProjectProgress();
  }, [projectId]);

  const fetchProjectProgress = async () => {
    const response = await axios.get(`/api/finalize_project/${projectId}`);
    setProgress(response.data);
  };

  if (!progress) {
    return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...</p>;
  }

  const costPercent = Math.min((progress.total_cost / progress.max_budget) * 100, 100);
  const durationPercent = Math.min((progress.total_duration / (progress.max_weeks * 7)) * 100, 100);

  return (
    <div className="project-progress">
      <h2>–ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–µ–∫—Ç–∞</h2>

      <div className="progress-bar">
        <p>üí∞ –ë—é–¥–∂–µ—Ç: {progress.total_cost} / {progress.max_budget}</p>
        <div className="progress-track">
          <div className="progress-fill" style={{ width: `${costPercent}%` }}></div>
        </div>
      </div>

      <div className="progress-bar">
        <p>üïí –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {progress.total_duration} –¥–Ω–µ–π / {progress.max_weeks * 7} –¥–Ω–µ–π</p>
        <div className="progress-track">
          <div className="progress-fill" style={{ width: `${durationPercent}%` }}></div>
        </div>
      </div>

      <div className={`status ${progress.status === "Success" ? 'success' : 'failure'}`}>
        {progress.status === "Success" ? "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–µ–Ω!" : "‚ùå –ü—Ä–æ–µ–∫—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω"}
      </div>
    </div>
  );
};

export default ProjectProgress;
